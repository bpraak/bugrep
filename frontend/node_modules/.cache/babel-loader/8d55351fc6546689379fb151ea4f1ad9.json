{"ast":null,"code":"var _jsxFileName = \"/home/gauransh/Documents/assignments/prakhar/bugrep/frontend/src/components/issues/CreateIssue.js\";\nimport React from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, Upload, message } from 'antd';\nimport { PlusOutlined, InboxOutlined } from '@ant-design/icons';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { connect } from 'react-redux';\nimport { getAllProjects } from '../../store/actions/projectActions';\nimport PropTypes from 'prop-types';\nimport { addIssue } from '../../store/actions/issueActions';\nconst {\n  Option\n} = Select;\nconst {\n  Dragger\n} = Upload;\nconst props = {\n  name: 'media',\n  multiple: false\n};\n\nclass CreateIssue extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleSubmit = e => {\n      // let tags = e.tags.split(' ')\n      let upload_size = 1;\n      let upload_type = 1;\n      let form_data = new FormData();\n      form_data.append('heading', e.heading);\n      form_data.append('project', e.project);\n      form_data.append('description', e.description.level.content);\n\n      if (e.media != null) {\n        if (e.media.file.size > 100000000) {\n          upload_size = 0;\n        }\n\n        console.log(e.media.file.type);\n\n        if (e.media.file.type !== 'image/jpg' && e.media.file.type !== 'image/jpeg' && e.media.file.type !== 'image/png' && e.media.file.type !== 'video/mp4') {\n          upload_type = 0;\n        }\n\n        form_data.append('media', e.media.file, e.media.file.name);\n      } // form_data.append(\"tags\", JSON.stringify(tags));\n\n\n      form_data.append(\"tags\", e.tags);\n\n      for (var value of form_data.values()) {\n        console.log(value);\n      }\n\n      if (upload_size === 1 && upload_type === 1) {\n        this.props.addIssue(form_data);\n      }\n\n      if (upload_type === 0) {\n        message.error('File not an image or video (jpg, jpeg, png, mp4)');\n      }\n\n      if (upload_size === 0) {\n        message.error('File should be less than 100 MB');\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllProjects();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }), window.innerWidth > 430 ? \"Add Bug\" : null), /*#__PURE__*/React.createElement(Drawer, {\n      title: \"Add a New Bug\",\n      width: window.innerWidth > 900 ? 800 : window.innerWidth - 100,\n      onClose: this.onClose,\n      visible: this.state.visible,\n      bodyStyle: {\n        paddingBottom: 80\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      layout: \"vertical\",\n      onFinish: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"heading\",\n      label: \"Heading\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Please enter heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"project\",\n      label: \"Project\",\n      rules: [{\n        required: true\n      }],\n      initialValue: this.props.projectId // value={this.state.project}s\n      // onChange={this.handleChange}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, !this.props.projectId ? /*#__PURE__*/React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Select a Project\",\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 60\n      }\n    }, this.props.allProjects.map(project => /*#__PURE__*/React.createElement(Option, {\n      key: project.id,\n      value: project.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }, project.name + ' ' + project.version))) : this.props.allProjects.find(item => item.id === this.props.projectId).name + ' ' + this.props.allProjects.find(item => item.id === this.props.projectId).version))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"tags\",\n      label: \"Tags\",\n      rules: [{\n        required: true\n      }] // value={this.state.tags}\n      // onChange={this.handleChange}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Enter space seperated values\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"description\",\n      label: \"Description\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      apiKey: \"t79x535w9g53fxpaufz1xmkq9728uu7vnibjc2khvdleb7yk\",\n      init: {\n        height: 200,\n        width: '100%',\n        menubar: true,\n        plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n        toolbar: 'formatselect | bold italic backcolor | \\\n                                                alignleft aligncenter alignright alignjustify | \\\n                                                bullist numlist outdent indent | removeformat | help'\n      } // onChange={this.handleEditorChange.bind(this)}\n      // value={this.state.description}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"media\",\n      label: \"Media\",\n      rules: [{\n        required: false\n      }] // onChange={this.handleFileChange}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dragger, Object.assign({\n      style: {\n        width: \"100%\",\n        padding: '0.5rem'\n      }\n    }, props, {\n      beforeUpload: () => {\n        return false;\n      },\n      onRemove: () => {\n        this.setState({\n          media: null\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ant-upload-drag-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InboxOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ant-upload-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 41\n      }\n    }, \"Click or drag file\"))))), /*#__PURE__*/React.createElement(Row, {\n      justify: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onClose,\n      style: {\n        marginRight: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button // onClick={this.onClose} \n    , {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }, \"Submit\")))))));\n  }\n\n}\n\nCreateIssue.propTypes = {\n  allProjects: PropTypes.array.isRequired,\n  addIssue: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  allProjects: state.project.allProjects\n});\n\nexport default connect(mapStateToProps, {\n  getAllProjects,\n  addIssue\n})(CreateIssue);","map":{"version":3,"sources":["/home/gauransh/Documents/assignments/prakhar/bugrep/frontend/src/components/issues/CreateIssue.js"],"names":["React","Drawer","Form","Button","Col","Row","Input","Select","Upload","message","PlusOutlined","InboxOutlined","Editor","connect","getAllProjects","PropTypes","addIssue","Option","Dragger","props","name","multiple","CreateIssue","Component","state","visible","showDrawer","setState","onClose","handleSubmit","e","upload_size","upload_type","form_data","FormData","append","heading","project","description","level","content","media","file","size","console","log","type","tags","value","values","error","componentDidMount","render","window","innerWidth","paddingBottom","required","width","projectId","input","option","children","toLowerCase","indexOf","allProjects","map","id","version","find","item","height","menubar","plugins","toolbar","padding","marginRight","propTypes","array","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, Upload, message } from 'antd';\nimport { PlusOutlined, InboxOutlined } from '@ant-design/icons';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { connect } from 'react-redux';\nimport { getAllProjects } from '../../store/actions/projectActions';\nimport PropTypes from 'prop-types';\nimport { addIssue } from '../../store/actions/issueActions';\n\nconst { Option } = Select;\nconst { Dragger } = Upload;\n\nconst props = {\n    name: 'media',\n    multiple: false,\n};\n\n\nclass CreateIssue extends React.Component {\n    state = {\n        visible: false,\n    };\n\n    static propTypes= {\n        allProjects: PropTypes.array.isRequired,\n        addIssue: PropTypes.func.isRequired,\n    }\n\n    componentDidMount() {\n        this.props.getAllProjects()\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleSubmit = e => {\n        // let tags = e.tags.split(' ')\n        let upload_size = 1;\n        let upload_type = 1\n        let form_data = new FormData();\n        form_data.append('heading', e.heading);\n        form_data.append('project', e.project);\n        form_data.append('description', e.description.level.content);\n        if (e.media!=null){\n            if(e.media.file.size>100000000){\n                upload_size = 0;\n            }\n            console.log(e.media.file.type)\n            if (e.media.file.type !== 'image/jpg' && e.media.file.type !== 'image/jpeg' && e.media.file.type !== 'image/png' && e.media.file.type !== 'video/mp4'){\n                upload_type = 0;\n            }\n            form_data.append('media', e.media.file, e.media.file.name);\n        }\n        // form_data.append(\"tags\", JSON.stringify(tags));\n        form_data.append(\"tags\", e.tags);\n        for (var value of form_data.values()) {\n            console.log(value);\n        }\n        if(upload_size === 1 && upload_type === 1){\n            this.props.addIssue(form_data);\n        }\n        if(upload_type === 0) {\n            message.error('File not an image or video (jpg, jpeg, png, mp4)')\n        }\n        if(upload_size === 0) {\n            message.error('File should be less than 100 MB')\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Button type=\"primary\" onClick={this.showDrawer}>\n                    <PlusOutlined /> \n                    { window.innerWidth > 430 ?\"Add Bug\":null}\n                </Button>\n                <Drawer\n                    title=\"Add a New Bug\"\n                    width={window.innerWidth > 900 ? 800 : window.innerWidth - 100}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                    bodyStyle={{ paddingBottom: 80 }}\n                >\n                    <Form layout=\"vertical\" onFinish={this.handleSubmit}>\n                        <Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    name=\"heading\"\n                                    label=\"Heading\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input \n                                        style={{ width: '100%' }} \n                                        placeholder=\"Please enter heading\" \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    name=\"project\"\n                                    label=\"Project\"\n                                    rules={[{ required: true }]}\n                                    initialValue={this.props.projectId}\n                                // value={this.state.project}s\n                                // onChange={this.handleChange}\n                                >\n                                    {!this.props.projectId?<Select\n                                        showSearch\n                                        style={{ width: '100%' }}\n                                        placeholder=\"Select a Project\"\n                                        optionFilterProp=\"children\"\n                                        filterOption={(input, option) =>\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                        }\n                                        \n                                    >\n                                        {this.props.allProjects.map(project => (\n                                            <Option key={project.id} value={project.id}>{project.name+' '+project.version}</Option>\n                                        ))}\n                                    </Select> : this.props.allProjects.find(item => item.id === this.props.projectId).name +' '+ this.props.allProjects.find(item => item.id === this.props.projectId).version}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    name=\"tags\"\n                                    label=\"Tags\"\n                                    rules={[{ required: true }]}\n                                    // value={this.state.tags}\n                                    // onChange={this.handleChange}\n                                >\n                                    <Input style={{ width: '100%' }} placeholder=\"Enter space seperated values\" />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    name=\"description\"\n                                    label=\"Description\"\n                                    rules={[\n                                        {\n                                            required: true\n                                        },\n                                    ]}\n                                    \n                                >\n                                    {/* <Input.TextArea style={{ width: 300 }} rows={5} placeholder=\"Please enter  description\" /> */}\n                                    <Editor\n                                        apiKey=\"t79x535w9g53fxpaufz1xmkq9728uu7vnibjc2khvdleb7yk\"\n                                        init={{\n                                            height: 200,\n                                            width: '100%',\n                                            menubar: true,\n                                            plugins: [\n                                                'advlist autolink lists link image charmap print preview anchor',\n                                                'searchreplace visualblocks code fullscreen',\n                                                'insertdatetime media table paste code help wordcount'\n                                            ],\n                                            toolbar:\n                                                'formatselect | bold italic backcolor | \\\n                                                alignleft aligncenter alignright alignjustify | \\\n                                                bullist numlist outdent indent | removeformat | help'\n                                        }}\n                                        // onChange={this.handleEditorChange.bind(this)}\n                                        // value={this.state.description}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    name=\"media\"\n                                    label=\"Media\"\n                                    rules={[\n                                        {\n                                            required: false\n                                        },\n                                    ]}\n                                    // onChange={this.handleFileChange}\n                                >\n                                    <Dragger\n                                        style={{ width: \"100%\", padding: '0.5rem' }}\n                                        {...props}\n                                        beforeUpload={() => {return false;}}\n                                        onRemove={() => {this.setState({media: null})}}\n                                    >\n                                        <p className=\"ant-upload-drag-icon\">\n                                            <InboxOutlined />\n                                        </p>\n                                        <p className=\"ant-upload-text\">Click or drag file</p>\n                                    </Dragger>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row justify={'center'}>\n                            <Col>\n                                <Form.Item>\n                                    <Button onClick={this.onClose} style={{ marginRight: 8 }}>\n                                        Cancel\n                                    </Button>\n                                </Form.Item>\n                            </Col>\n                            <Col>\n                                <Form.Item>\n                                    <Button\n                                        // onClick={this.onClose} \n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                    >\n                                        Submit\n                                    </Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({ \n    allProjects : state.project.allProjects\n});\n\nexport default connect(mapStateToProps, { getAllProjects, addIssue })(CreateIssue);\n"]},"metadata":{},"sourceType":"module"}