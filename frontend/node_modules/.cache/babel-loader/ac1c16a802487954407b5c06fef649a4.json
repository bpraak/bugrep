{"ast":null,"code":"var _jsxFileName = \"/Users/prakhar/Desktop/IMG_Assignments/django/bugrep/frontend/src/common/PrivateRoute.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport Loader from './Loader';\n\nconst PrivaterRoute = ({\n  component: Component,\n  auth,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (auth.isLoading) {\n        return /*#__PURE__*/React.createElement(Loader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }\n        });\n      } else if (!auth.isAuthenticated) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/Login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivaterRoute);","map":{"version":3,"sources":["/Users/prakhar/Desktop/IMG_Assignments/django/bugrep/frontend/src/common/PrivateRoute.js"],"names":["React","connect","Route","Redirect","Loader","PrivaterRoute","component","Component","auth","rest","props","isLoading","isAuthenticated","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,IAAvB;AAA6B,KAAGC;AAAhC,CAAD,KAA2C;AAC7D,sBACI,oBAAC,KAAD,oBACQA,IADR;AAEI,IAAA,MAAM,EAAEC,KAAK,IAAI;AACb,UAAGF,IAAI,CAACG,SAAR,EAAkB;AACd,4BACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJD,MAKK,IAAI,CAACH,IAAI,CAACI,eAAV,EAA0B;AAC3B,4BACI,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJI,MAKA;AACD,4BACI,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH;AACJ,KAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAsBH,CAvBD;;AAyBA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BN,EAAAA,IAAI,EAAEM,KAAK,CAACN;AADkB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACY,eAAD,CAAP,CAAyBR,aAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport Loader from './Loader';\n\n\nconst PrivaterRoute = ({component: Component, auth, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                if(auth.isLoading){\n                    return (\n                        <Loader />\n                    )\n                } \n                else if (!auth.isAuthenticated){\n                    return (\n                        <Redirect to='/Login'/>\n                    )\n                }\n                else {\n                    return (\n                        <Component {...props} />\n                    )\n                }\n            }}\n        />\n    )\n} \n\nconst mapStateToProps = state => ({ \n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivaterRoute);"]},"metadata":{},"sourceType":"module"}