{"ast":null,"code":"var _jsxFileName = \"/Users/prakhar/Desktop/IMG_Assignments/django/bugrep/frontend/src/components/issues/IssueList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Pagination, Progress } from 'antd';\nimport IssueCard from './IssueCard';\nimport Loader from '../../common/Loader';\nimport axios from 'axios';\n\nconst IssueList = ({\n  projectId,\n  userId,\n  status,\n  reportedUserId\n}) => {\n  const [issues, setIssues] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentIssue] = useState(1);\n  const [issuesPerPage, setIssuesPerPage] = useState(9);\n  const [openPercent, setOpenPercent] = useState();\n  const [inProgressPercent, setInProgressPercent] = useState();\n  const [donePercent, setDonePercent] = useState();\n\n  const round = (value, decimals) => {\n    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n  };\n\n  useEffect(() => {\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n\n    const fetchIssues = async () => {\n      setLoading(true);\n      let url = null;\n\n      if (projectId) {\n        url = 'http://127.0.0.1:8000/backend/projects/' + projectId + '/issues/';\n      } else if (userId) {\n        url = 'http://127.0.0.1:8000/backend/users/' + userId + '/assigned_issues/';\n      } else if (reportedUserId) {\n        url = 'http://127.0.0.1:8000/backend/users/' + reportedUserId + '/reported_issues/';\n      }\n\n      axios.get(url, config).then(response => {\n        let issues = response.data;\n\n        if (status != undefined) {\n          issues = issues.filter(issue => issue.status == status);\n        }\n\n        setIssues(issues);\n        const totalIssues = Object.keys(issues).length;\n        const openIssues = Object.keys(issues.filter(issue => issue.status == 0)).length;\n        const inProgressIssues = Object.keys(issues.filter(issue => issue.status == 1)).length;\n        const doneIssues = totalIssues - openIssues - inProgressIssues;\n        setOpenPercent(round(openIssues / totalIssues * 100, 2));\n        setDonePercent(round(doneIssues / totalIssues * 100, 2));\n        setInProgressPercent(round(inProgressIssues / totalIssues * 100, 2));\n      }).catch(error => {\n        console.log(error);\n      });\n      setLoading(false);\n    };\n\n    fetchIssues();\n  }, []);\n  const indexOfLastIssue = currentPage * issuesPerPage;\n  const indexOfFirstIssue = indexOfLastIssue - issuesPerPage;\n  const currentIssues = issues.slice(indexOfFirstIssue, indexOfLastIssue);\n\n  const paginate = page => setCurrentIssue(page);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, status == undefined ? /*#__PURE__*/React.createElement(Row, {\n    justify: \"space-around\",\n    gutter: [0, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }, \"Open\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    type: \"circle\",\n    percent: openPercent,\n    strokeColor: \"red\",\n    status: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 47\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 27\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    type: \"circle\",\n    percent: inProgressPercent,\n    status: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 54\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 27\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    type: \"circle\",\n    percent: donePercent,\n    strokeColor: \"#87d068\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 47\n    }\n  }))))) : null, /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 30],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, currentIssues.map(issue => {\n    return /*#__PURE__*/React.createElement(Col, {\n      xs: 24,\n      sm: 12,\n      md: 12,\n      lg: 8,\n      xl: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/Bugs/\" + issue.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IssueCard, {\n      bug: issue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(Row, {\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    onChange: page => {\n      paginate(page);\n    },\n    defaultCurrent: 1,\n    total: Object.keys(issues).length,\n    pageSize: issuesPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default IssueList;","map":{"version":3,"sources":["/Users/prakhar/Desktop/IMG_Assignments/django/bugrep/frontend/src/components/issues/IssueList.js"],"names":["React","useState","useEffect","Link","Row","Col","Pagination","Progress","IssueCard","Loader","axios","IssueList","projectId","userId","status","reportedUserId","issues","setIssues","loading","setLoading","currentPage","setCurrentIssue","issuesPerPage","setIssuesPerPage","openPercent","setOpenPercent","inProgressPercent","setInProgressPercent","donePercent","setDonePercent","round","value","decimals","Number","Math","config","headers","fetchIssues","url","get","then","response","data","undefined","filter","issue","totalIssues","Object","keys","length","openIssues","inProgressIssues","doneIssues","catch","error","console","log","indexOfLastIssue","indexOfFirstIssue","currentIssues","slice","paginate","page","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Pagination, Progress } from 'antd';\nimport IssueCard from './IssueCard';\nimport Loader from '../../common/Loader';\nimport axios from 'axios';\n\n\nconst IssueList = ({ projectId, userId, status, reportedUserId }) => {\n    const [issues, setIssues] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentIssue] = useState(1);\n    const [issuesPerPage, setIssuesPerPage] = useState(9);\n    const [openPercent, setOpenPercent] = useState();\n    const [inProgressPercent, setInProgressPercent] = useState();\n    const [donePercent, setDonePercent] = useState();\n\n    const round = (value, decimals) => {\n        return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n    }\n\n    useEffect(() => {\n        const config = {\n            headers: {\n                'content-type': 'application/json'\n            }\n        }\n\n        const fetchIssues = async () => {\n            setLoading(true);\n            let url = null;\n            if (projectId) {\n                url = 'http://127.0.0.1:8000/backend/projects/' + projectId + '/issues/'\n            } else if (userId) {\n                url = 'http://127.0.0.1:8000/backend/users/' + userId + '/assigned_issues/'\n            } else if(reportedUserId) {\n                url = 'http://127.0.0.1:8000/backend/users/' + reportedUserId + '/reported_issues/'\n            }\n            axios.get(url, config)\n                .then(response => {\n                    let issues = response.data\n                    if (status != undefined) {\n                        issues = issues.filter(issue => issue.status == status)\n                    }\n                    setIssues(issues);\n                    const totalIssues = Object.keys(issues).length;\n                    const openIssues = Object.keys(issues.filter(issue => issue.status == 0)).length;\n                    const inProgressIssues = Object.keys(issues.filter(issue => issue.status == 1)).length;\n                    const doneIssues = totalIssues - openIssues - inProgressIssues;\n                    setOpenPercent(round(openIssues / totalIssues * 100, 2));\n                    setDonePercent(round(doneIssues / totalIssues * 100, 2));\n                    setInProgressPercent(round(inProgressIssues / totalIssues * 100, 2))\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n\n            setLoading(false);\n        }\n\n        fetchIssues();\n\n\n    }, [])\n\n    const indexOfLastIssue = currentPage * issuesPerPage;\n    const indexOfFirstIssue = indexOfLastIssue - issuesPerPage;\n    const currentIssues = issues.slice(indexOfFirstIssue, indexOfLastIssue);\n\n    const paginate = (page) => setCurrentIssue(page);\n\n    if (loading) {\n        return <Loader />\n    }\n\n    return (\n        <>\n            {status == undefined ? <Row justify=\"space-around\" gutter={[0, 32]}>\n                <Col><Row><Col>Open</Col><Col><Progress type=\"circle\" percent={openPercent} strokeColor=\"red\" status=\"normal\" /></Col></Row></Col>\n                <Col><Row><Col>In Progress</Col><Col><Progress type=\"circle\" percent={inProgressPercent} status=\"active\" /></Col></Row></Col>\n                <Col><Row><Col>Done</Col><Col><Progress type=\"circle\" percent={donePercent} strokeColor=\"#87d068\" /></Col></Row></Col>\n            </Row> : null}\n            <Row gutter={[16, 30]}>\n                {currentIssues.map(issue => {\n                    return (\n                        <Col xs={24} sm={12} md={12} lg={8} xl={8}>\n                            <Link to={\"/Bugs/\" + issue.id}>\n                                <IssueCard bug={issue}></IssueCard>\n                            </Link>\n                        </Col>\n                    );\n                })}\n            </Row>\n            <Row justify={'center'}>\n                <Pagination onChange={(page) => { paginate(page) }} defaultCurrent={1} total={Object.keys(issues).length} pageSize={issuesPerPage} />\n            </Row>\n        </>\n    );\n}\n\n\nexport default IssueList;"]},"metadata":{},"sourceType":"module"}