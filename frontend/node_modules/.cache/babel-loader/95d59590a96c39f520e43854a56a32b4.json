{"ast":null,"code":"var _jsxFileName = \"/home/gauransh/Documents/assignments/prakhar/bugrep/frontend/src/components/issues/IssueCard.js\";\nimport React from 'react';\nimport { Card, Avatar, Tooltip, Typography, Row, Col } from 'antd';\nimport { CheckCircleTwoTone, LoadingOutlined, CloseCircleTwoTone } from '@ant-design/icons';\nimport ReactHtmlParser from 'react-html-parser';\nimport ReactTimeAgo from 'react-time-ago';\nconst {\n  Meta\n} = Card;\nconst {\n  Paragraph\n} = Typography;\n\nconst IssueCard = ({\n  bug\n}) => {\n  const assignedUserName = bug.members.find(item => item.id === bug.assigned_user) ? bug.members.find(item => item.id === bug.assigned_user).name : \"\";\n\n  const status = status => {\n    if (status === 0) {\n      return /*#__PURE__*/React.createElement(CloseCircleTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }\n      });\n    } else if (status === 1) {\n      return /*#__PURE__*/React.createElement(LoadingOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(CheckCircleTwoTone, {\n        twoToneColor: \"#52c41a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    actions: [/*#__PURE__*/React.createElement(Tooltip, {\n      title: assignedUserName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 51\n      }\n    }, \"Assigned User\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Comments : \", bug.no_of_comments)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    avatar: bug.reported_user_profile ? /*#__PURE__*/React.createElement(Avatar, {\n      src: bug.reported_user_profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 98\n      }\n    }, bug.reported_user_name ? bug.reported_user_name[0] : null),\n    title: /*#__PURE__*/React.createElement(Row, {\n      justify: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 53\n      }\n    }, bug.heading), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 77\n      }\n    }, status(bug.status))),\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactTimeAgo, {\n      date: bug.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(Paragraph, {\n      style: {\n        marginTop: '0.5rem'\n      },\n      ellipsis: {\n        rows: 2,\n        expandable: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 64\n      }\n    }, ReactHtmlParser(bug.description))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default IssueCard;","map":{"version":3,"sources":["/home/gauransh/Documents/assignments/prakhar/bugrep/frontend/src/components/issues/IssueCard.js"],"names":["React","Card","Avatar","Tooltip","Typography","Row","Col","CheckCircleTwoTone","LoadingOutlined","CloseCircleTwoTone","ReactHtmlParser","ReactTimeAgo","Meta","Paragraph","IssueCard","bug","assignedUserName","members","find","item","id","assigned_user","name","status","no_of_comments","reported_user_profile","reported_user_name","heading","date","marginTop","rows","expandable","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Avatar, Tooltip, Typography, Row, Col } from 'antd';\nimport {\n    CheckCircleTwoTone,\n    LoadingOutlined,\n    CloseCircleTwoTone,\n} from '@ant-design/icons';\nimport ReactHtmlParser from 'react-html-parser';\nimport ReactTimeAgo from 'react-time-ago';\n\nconst { Meta } = Card;\nconst { Paragraph } = Typography;\n\nconst IssueCard = ({ bug }) => {\n    const assignedUserName = bug.members.find(item => item.id === bug.assigned_user) ? bug.members.find(item => item.id === bug.assigned_user).name:\"\"\n\n    const status = (status) => {\n        if (status === 0) {\n            return <CloseCircleTwoTone twoToneColor=\"#eb2f96\" />\n        }\n        else if (status === 1) {\n            return <LoadingOutlined />\n        }\n        else {\n            return <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n        }\n    }\n\n    return (\n        <Card\n            actions={[\n                <Tooltip title={assignedUserName}><div>Assigned User</div></Tooltip>,\n                <div>Comments : {bug.no_of_comments}</div>\n            ]}\n        >\n            <Meta\n                avatar={bug.reported_user_profile ? <Avatar src={bug.reported_user_profile} /> : <Avatar>{bug.reported_user_name?bug.reported_user_name[0]:null}</Avatar>}\n                title={<Row justify=\"space-between\"><Col>{bug.heading}</Col><Col>{status(bug.status)}</Col></Row>}\n                description={<><ReactTimeAgo date={bug.date} /><Paragraph style={{ marginTop: '0.5rem' }} ellipsis={{ rows: 2, expandable: false }}>{ReactHtmlParser(bug.description)}</Paragraph></>}\n            />\n        </Card>\n    );\n}\n\n\n\nexport default IssueCard;"]},"metadata":{},"sourceType":"module"}