{"ast":null,"code":"var _jsxFileName = \"/Users/prakhar/Desktop/IMG_Assignments/django/bugrep/frontend/src/components/comments/AddComment.js\";\nimport React from 'react';\nimport { Comment, Form, Avatar, Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport WebSocketInstance from '../../websocket';\nconst {\n  TextArea\n} = Input;\n\nconst Editor = ({\n  onSubmit,\n  rows\n}) => /*#__PURE__*/React.createElement(Form, {\n  onFinish: onSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Form.Item, {\n  name: \"description\",\n  rules: [{\n    required: true\n  }],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextArea, {\n  rows: rows,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(Form.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  htmlType: \"submit\",\n  type: \"primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n}, \"Add Comment\")));\n\nclass AddComment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const commentObject = {\n        reply: this.props.reply,\n        description: event.description,\n        issueId: this.props.bugId\n      };\n      WebSocketInstance.newComment(commentObject);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.state = {\n      submitting: false,\n      description: null,\n      visible: false\n    };\n  }\n\n  render() {\n    if (!this.props.user) {\n      return null;\n    }\n\n    if (this.state.visible) {\n      return /*#__PURE__*/React.createElement(Comment, {\n        avatar: this.props.user.profile ? /*#__PURE__*/React.createElement(Avatar, {\n          src: this.props.user.profile,\n          alt: this.props.user.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }\n        }) : /*#__PURE__*/React.createElement(Avatar, {\n          alt: this.props.user.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 34\n          }\n        }, this.props.user.first_name[0]),\n        content: /*#__PURE__*/React.createElement(Editor, {\n          onSubmit: this.handleSubmit,\n          submitting: this.state.submitting,\n          rows: this.props.rows,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      });\n    }\n\n    if (!this.props.visible) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.handleClick,\n        className: \"comment-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 20\n        }\n      }, \"Reply\");\n    }\n\n    return /*#__PURE__*/React.createElement(Comment, {\n      avatar: this.props.user.profile ? /*#__PURE__*/React.createElement(Avatar, {\n        src: this.props.user.profile,\n        alt: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(Avatar, {\n        alt: this.props.user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 30\n        }\n      }, this.props.user.first_name[0]),\n      content: /*#__PURE__*/React.createElement(Editor, {\n        onSubmit: this.handleSubmit,\n        submitting: this.state.submitting,\n        rows: this.props.rows,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps)(AddComment);","map":{"version":3,"sources":["/Users/prakhar/Desktop/IMG_Assignments/django/bugrep/frontend/src/components/comments/AddComment.js"],"names":["React","Comment","Form","Avatar","Button","Input","connect","WebSocketInstance","TextArea","Editor","onSubmit","rows","required","AddComment","Component","constructor","props","handleSubmit","event","commentObject","reply","description","issueId","bugId","newComment","setState","visible","handleClick","state","submitting","render","user","profile","id","first_name","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Comment, Form, Avatar, Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport WebSocketInstance from '../../websocket';\n\nconst { TextArea } = Input;\n\nconst Editor = ({ onSubmit, rows }) => (\n    <Form onFinish={onSubmit}>\n        <Form.Item\n            name=\"description\"\n            rules={[{ required: true }]}\n        >\n            <TextArea rows={rows} />\n        </Form.Item>\n        <Form.Item>\n            <Button htmlType=\"submit\" type=\"primary\">\n                Add Comment\n            </Button>\n        </Form.Item>\n    </Form>\n);\n\nclass AddComment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            submitting: false,\n            description: null,\n            visible: false\n        }\n    }\n\n    handleSubmit = (event) => {\n        const commentObject = {\n            reply: this.props.reply,\n            description: event.description,\n            issueId: this.props.bugId\n        }\n        WebSocketInstance.newComment(commentObject);\n        this.setState({\n            visible: false\n        })\n    }\n\n    handleClick = () => {\n        this.setState({\n            visible: true\n        })\n    }\n\n    render() {\n        if(!this.props.user){\n            return null\n        }\n        if(this.state.visible){\n            return (\n                <Comment\n                    avatar={\n                        this.props.user.profile ?\n                            <Avatar\n                                src={this.props.user.profile}\n                                alt={this.props.user.id}\n                            /> : <Avatar alt={this.props.user.id}>{this.props.user.first_name[0]}</Avatar>\n                    }\n                    content={\n                        <Editor\n                            onSubmit={this.handleSubmit}\n                            submitting={this.state.submitting}\n                            rows={this.props.rows}\n                        />\n                    }\n                />\n            );\n        }\n        if (!this.props.visible) {\n            return <span onClick={this.handleClick} className=\"comment-action\">Reply</span>\n        }\n        return (\n            <Comment\n                avatar={\n                    this.props.user.profile ?\n                        <Avatar\n                            src={this.props.user.profile}\n                            alt={this.props.user.id}\n                        /> : <Avatar alt={this.props.user.id}>{this.props.user.first_name[0]}</Avatar>\n                }\n                content={\n                    <Editor\n                        onSubmit={this.handleSubmit}\n                        submitting={this.state.submitting}\n                        rows={this.props.rows}\n                    />\n                }\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.auth.user\n})\n\nexport default connect(mapStateToProps)(AddComment);\n"]},"metadata":{},"sourceType":"module"}