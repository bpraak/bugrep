{"ast":null,"code":"var _jsxFileName = \"/Users/prakhar/Desktop/IMG_Assignments/django/bugrep/frontend/src/components/comments/CommentDetail.js\";\nimport React from 'react';\nimport { Avatar, Tooltip, Comment } from 'antd';\nimport { LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport ReactTimeAgo from 'react-time-ago';\nimport AddComment from './AddComment';\n\nconst date = date => {\n  const thedate = new Date(date);\n  return thedate.toLocaleTimeString() + \" \" + thedate.toLocaleDateString();\n};\n\nconst CommentDetail = ({\n  item,\n  user,\n  users,\n  onLike,\n  children,\n  reply\n}) => {\n  return /*#__PURE__*/React.createElement(Comment, {\n    actions: [/*#__PURE__*/React.createElement(Tooltip, {\n      key: \"comment-basic-like\",\n      title: \"Like\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => onLike(item.id, item.likes.find(element => element === user.id) ? 1 : 0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, React.createElement(item.likes.find(element => element === user.id) ? LikeFilled : LikeOutlined), \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, Object.keys(item.likes).length))), // reply?<span key={item.id}>Reply</span>:null\n    reply ? /*#__PURE__*/React.createElement(AddComment, {\n      bugId: item.issue,\n      reply: item.id,\n      rows: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }) : null],\n    author: users.find(element => element.id === item.user).first_name + \" \" + users.find(element => element.id === item.user).last_name,\n    avatar: users.find(element => element.id === item.user).profile ? /*#__PURE__*/React.createElement(Avatar, {\n      src: item.profile,\n      alt: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Avatar, {\n      alt: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }\n    }, users.find(element => element.id === item.user).first_name[0]),\n    content: item.description,\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: date(item.date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ReactTimeAgo, {\n      date: item.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 56\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default CommentDetail;\n;","map":{"version":3,"sources":["/Users/prakhar/Desktop/IMG_Assignments/django/bugrep/frontend/src/components/comments/CommentDetail.js"],"names":["React","Avatar","Tooltip","Comment","LikeFilled","LikeOutlined","ReactTimeAgo","AddComment","date","thedate","Date","toLocaleTimeString","toLocaleDateString","CommentDetail","item","user","users","onLike","children","reply","id","likes","find","element","createElement","Object","keys","length","issue","first_name","last_name","profile","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Avatar, Tooltip, Comment } from 'antd';\nimport {\n    LikeFilled,\n    LikeOutlined\n} from '@ant-design/icons';\nimport ReactTimeAgo from 'react-time-ago';\nimport AddComment from './AddComment';\n\nconst date = (date) => {\n    const thedate = new Date(date);\n    return thedate.toLocaleTimeString() + \" \" + thedate.toLocaleDateString();\n}\n\nconst CommentDetail = ({ item, user, users, onLike, children, reply }) => {\n\n    return (\n        <Comment\n            actions={[\n                <Tooltip key=\"comment-basic-like\" title=\"Like\">\n                    <span\n                        onClick={() => onLike(item.id, item.likes.find(element => element === user.id) ? 1 : 0)}\n                    >\n                        {React.createElement(item.likes.find(element => element === user.id) ? LikeFilled : LikeOutlined)}\n                                                &nbsp;\n                        <span className=\"comment-action\">{Object.keys(item.likes).length}</span>\n                    </span>\n                </Tooltip>,\n                // reply?<span key={item.id}>Reply</span>:null\n                reply ? <AddComment bugId={item.issue} reply={item.id} rows={1} />:null\n            ]}\n            author={users.find(element => element.id === item.user).first_name + \" \" + users.find(element => element.id === item.user).last_name}\n            avatar={\n                users.find(element => element.id === item.user).profile ?\n                    <Avatar\n                        src={item.profile}\n                        alt={item.id}\n                    />\n                    : <Avatar alt={item.id}>{users.find(element => element.id === item.user).first_name[0]}</Avatar>\n            }\n            content={item.description}\n            datetime={<Tooltip title={date(item.date)}><ReactTimeAgo date={item.date} /></Tooltip>}\n        >\n            {children}\n        </Comment>\n    );\n}\n\n\n\nexport default CommentDetail;;"]},"metadata":{},"sourceType":"module"}