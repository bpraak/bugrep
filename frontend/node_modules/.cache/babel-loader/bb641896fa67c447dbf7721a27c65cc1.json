{"ast":null,"code":"import axios from 'axios';\nimport { message } from 'antd';\nimport { push } from 'connected-react-router';\nexport const getAllProjects = () => dispatch => {\n  const config = {\n    headers: {\n      'content-type': 'application/json'\n    }\n  };\n  axios.get('http://127.0.0.1:8000/backend/projects', config).then(response => {\n    dispatch({\n      type: 'ALL_PROJECTS',\n      payload: response.data\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getMyProjects = () => (dispatch, getState) => {\n  const config = {\n    headers: {\n      'content-type': 'application/json'\n    }\n  };\n  const userId = getState().auth.user.id;\n  axios.get('http://127.0.0.1:8000/backend/users/' + userId + '/projects/', config).then(response => {\n    dispatch({\n      type: 'MY_PROJECTS',\n      payload: response.data\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const createProject = form_data => dispatch => {\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  axios.post('http://127.0.0.1:8000/backend/projects/', form_data, config).then(response => {\n    dispatch({\n      type: 'ADD_PROJECT',\n      payload: response.data\n    });\n    return response.data.id;\n  }).then(projectId => {\n    dispatch(push('/Projects/' + projectId));\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const deleteProject = projectId => (dispatch, getState) => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'content-type': 'application/json'\n    }\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  axios.delete('http://127.0.0.1:8000/backend/projects/' + projectId + '/', config).then(() => {\n    dispatch(push('/Projects'));\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const editProject = (form_data, projectId) => (dispatch, getState) => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'content-type': 'application/json'\n    }\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  axios.patch('http://127.0.0.1:8000/backend/projects/' + projectId + \"/\", form_data, config).then(response => {\n    dispatch(getAllProjects());\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/gauransh/Documents/assignments/prakhar/bugrep/frontend/src/store/actions/projectActions.js"],"names":["axios","message","push","getAllProjects","dispatch","config","headers","get","then","response","type","payload","data","catch","error","console","log","getMyProjects","getState","userId","auth","user","id","createProject","form_data","post","projectId","err","deleteProject","token","delete","editProject","patch"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { message } from 'antd';\nimport { push } from 'connected-react-router';\n\n\nexport const getAllProjects = () => (dispatch) => {\n    const config = {\n        headers: {\n            'content-type': 'application/json'\n        }\n    }\n\n    axios.get('http://127.0.0.1:8000/backend/projects', config)\n        .then(response => {\n            dispatch({\n                type: 'ALL_PROJECTS',\n                payload: response.data,\n            });\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const getMyProjects = () => (dispatch, getState) => {\n    const config = {\n        headers: {\n            'content-type': 'application/json'\n        }\n    }\n\n    const userId = getState().auth.user.id\n\n    axios.get('http://127.0.0.1:8000/backend/users/' + userId + '/projects/', config)\n        .then(response => {\n            dispatch({\n                type: 'MY_PROJECTS',\n                payload: response.data,\n            });\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const createProject = (form_data) => (dispatch) => {\n\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n\n    axios.post('http://127.0.0.1:8000/backend/projects/', form_data, config)\n        .then((response) => {\n            dispatch({\n                type: 'ADD_PROJECT',\n                payload: response.data\n            });\n            return response.data.id\n        })\n        .then((projectId) => {\n            dispatch(push('/Projects/' + projectId))\n        })\n        .catch(err => {\n            console.log(err);\n        })\n}\n\nexport const deleteProject = (projectId) => (dispatch, getState) => {\n    const token = getState().auth.token\n\n    const config = {\n        headers: {\n            'content-type': 'application/json'\n        }\n    }\n\n    if (token) {\n        config.headers['Authorization'] = `Token ${token}`;\n    }\n\n    axios.delete('http://127.0.0.1:8000/backend/projects/' + projectId + '/', config)\n        .then(() => {\n            dispatch(push('/Projects'))\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const editProject = (form_data, projectId) => (dispatch, getState) => {\n    const token = getState().auth.token\n\n    const config = {\n        headers: {\n            'content-type': 'application/json'\n        }\n    }\n\n    if (token) {\n        config.headers['Authorization'] = `Token ${token}`;\n    }\n\n    axios.patch('http://127.0.0.1:8000/backend/projects/'+projectId+\"/\", form_data, config)\n        .then((response) => {\n            dispatch(getAllProjects());\n        })\n        .catch(err => {\n            console.log(err);\n        })\n}\n\n\n"]},"metadata":{},"sourceType":"module"}